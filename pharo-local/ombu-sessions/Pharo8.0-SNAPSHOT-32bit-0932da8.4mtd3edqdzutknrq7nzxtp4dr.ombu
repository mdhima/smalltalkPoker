OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-02-11T19:41:46.295919-05:00' ],		#prior : OmReference [ 'Pharo8.0-SNAPSHOT-32bit-0932da8.3v4uf68stycy1rhoutjv6p70z', '22' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Poker,				#isMetaSide : false			},			#name : #'divideHands:',			#protocol : #'as yet unclassified',			#sourceCode : 'divideHands: shuf\r\t"comment stating purpose of instance-side message"\r\t"scope: class-variables  &  instance-variables"\t\r\t\t\t\r\thand := SortedCollection new. \r\thand2 := SortedCollection new. \r\r\t1 to: 4 do: [ :i | (i \\\\ 2 == 1) ifTrue: [ hand add: (shuf at: i) ] ifFalse: [ hand2 add: (shuf at: i) ] ].\r\t5 to: 9 do: [ :i | hand add: (shuf at: i). hand2 add: (shuf at: i) ].',			#stamp : 'MagdalenaDhima 1/31/2021 12:20',			#package : #CPS506		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Poker,				#isMetaSide : false			},			#name : #'divideHands:',			#protocol : #accesing,			#sourceCode : 'divideHands: shuf\r\t"comment stating purpose of instance-side message"\r\t"scope: class-variables  &  instance-variables"\t\r\t\t\t\r\thand := SortedCollection new. \r\thand2 := SortedCollection new. \r\r\t1 to: 4 do: [ :i | (i \\\\ 2 == 1) ifTrue: [ hand add: (shuf at: i) ] ifFalse: [ hand2 add: (shuf at: i) ] ].\r\t5 to: 9 do: [ :i | hand add: (shuf at: i). hand2 add: (shuf at: i) ].',			#stamp : 'MagdalenaDhima 1/31/2021 12:20',			#package : #CPS506		}	}}OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-02-11T19:43:36.907919-05:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Poker,				#isMetaSide : false			},			#name : #'getStreak:',			#protocol : #accessing,			#sourceCode : 'getStreak: streaks\r\t"comment stating purpose of instance-side message"\r\t"scope: class-variables  &  instance-variables"\t\r\t\t\t\r\t| suitStreak previousCard previous card current highestSuitStreak |\rsuitStreak := OrderedCollection new.\r2 to: streaks size do: [ :i | \r\tpreviousCard := streaks at: (i-1).\r\tprevious := previousCard at: previousCard size.\r\tcard := streaks at: i.\r\tcurrent := card at: card size.\r\t(previous == current)\r\t\tifTrue: [(suitStreak isEmpty) ifTrue:[suitStreak add: previousCard]. suitStreak add: card]].\r\t^suitStreak\r\t',			#stamp : 'MagdalenaDhima 1/30/2021 15:45',			#package : #CPS506		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Poker,				#isMetaSide : false			},			#name : #'getStreak:',			#protocol : #'as yet unclassified',			#sourceCode : 'getStreak: streaks\r\t"comment stating purpose of instance-side message"\r\t"scope: class-variables  &  instance-variables"\t\r\t\t\t\r\t| suitStreak previousCard previous card current highestSuitStreak |\rsuitStreak := OrderedCollection new.\r2 to: streaks size do: [ :i | \r\tpreviousCard := streaks at: (i-1).\r\tprevious := previousCard at: previousCard size.\r\tcard := streaks at: i.\r\tcurrent := card at: card size.\r\t(previous == current)\r\t\tifTrue: [(suitStreak isEmpty) ifTrue:[suitStreak add: previousCard]. suitStreak add: card]].\r\t^suitStreak\r\t',			#stamp : 'MagdalenaDhima 1/30/2021 15:45',			#package : #CPS506		}	}}OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-02-11T19:43:36.911919-05:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Poker,				#isMetaSide : false			},			#name : #'getStreak:',			#protocol : #accessing,			#sourceCode : 'getStreak: streaks\r\t"comment stating purpose of instance-side message"\r\t"scope: class-variables  &  instance-variables"\t\r\t\t\t\r\t| suitStreak previousCard previous card current highestSuitStreak |\rsuitStreak := OrderedCollection new.\r2 to: streaks size do: [ :i | \r\tpreviousCard := streaks at: (i-1).\r\tprevious := previousCard at: previousCard size.\r\tcard := streaks at: i.\r\tcurrent := card at: card size.\r\t(previous == current)\r\t\tifTrue: [(suitStreak isEmpty) ifTrue:[suitStreak add: previousCard]. suitStreak add: card]].\r\t^suitStreak\r\t',			#stamp : 'MagdalenaDhima 1/30/2021 15:45',			#package : #CPS506		}	}}OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-02-11T19:44:47.448919-05:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Poker,				#isMetaSide : false			},			#name : #'returnSuitCards:',			#protocol : #accessing,			#sourceCode : 'returnSuitCards: suit\r\t"comment stating purpose of instance-side message"\r\t"scope: class-variables  &  instance-variables"\t\r\t\t\t\r\t| cardsOfAKind card temp |\r\r\tcardsOfAKind := OrderedCollection new.\r\r\t1 to: (hand size) do: [ :i | \r\t\tcard := hand at: i.\r\t\ttemp := card at: (card size).\r\t\t(temp asSymbol == suit asSymbol) ifTrue: [cardsOfAKind add: card].\r].\r^cardsOfAKind',			#stamp : 'MagdalenaDhima 1/30/2021 15:03',			#package : #CPS506		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Poker,				#isMetaSide : false			},			#name : #'returnSuitCards:',			#protocol : #'as yet unclassified',			#sourceCode : 'returnSuitCards: suit\r\t"comment stating purpose of instance-side message"\r\t"scope: class-variables  &  instance-variables"\t\r\t\t\t\r\t| cardsOfAKind card temp |\r\r\tcardsOfAKind := OrderedCollection new.\r\r\t1 to: (hand size) do: [ :i | \r\t\tcard := hand at: i.\r\t\ttemp := card at: (card size).\r\t\t(temp asSymbol == suit asSymbol) ifTrue: [cardsOfAKind add: card].\r].\r^cardsOfAKind',			#stamp : 'MagdalenaDhima 1/30/2021 15:03',			#package : #CPS506		}	}}OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-02-11T19:44:47.502919-05:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Poker,				#isMetaSide : false			},			#name : #'returnSuitCards:',			#protocol : #accessing,			#sourceCode : 'returnSuitCards: suit\r\t"comment stating purpose of instance-side message"\r\t"scope: class-variables  &  instance-variables"\t\r\t\t\t\r\t| cardsOfAKind card temp |\r\r\tcardsOfAKind := OrderedCollection new.\r\r\t1 to: (hand size) do: [ :i | \r\t\tcard := hand at: i.\r\t\ttemp := card at: (card size).\r\t\t(temp asSymbol == suit asSymbol) ifTrue: [cardsOfAKind add: card].\r].\r^cardsOfAKind',			#stamp : 'MagdalenaDhima 1/30/2021 15:03',			#package : #CPS506		}	}}OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-02-11T20:01:42.512919-05:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\Administrator\\Documents\\Pharo\\images\\Pharo 8.0 - 64bit (stable)\\Pharo 8.0 - 64bit (stable).image'	}}