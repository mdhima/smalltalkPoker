OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-01-26T12:25:55.874668-05:00' ],		#prior : OmReference [ 'Pharo8.0-SNAPSHOT-32bit-0932da8.3q205gqmnddqp9uki89mw0001', '12' ],		#self : OmReference [ '1' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Lab01\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'CPS506\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Lab01,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Lab01 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Lab01 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Lab01,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #CPS506,			#package : #CPS506,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-01-26T12:32:44.719668-05:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Lab01\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'CPS506\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Lab01,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Lab01 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Lab01 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Lab01,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #CPS506,			#package : #CPS506,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Lab01\r\tinstanceVariableNames: \'arr\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'CPS506\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Lab01,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Lab01,						#isMetaSide : false					},					#name : #arr,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Lab01 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Lab01 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Lab01,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #CPS506,			#package : #CPS506,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-01-26T12:32:46.509668-05:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Lab01,				#isMetaSide : false			},			#name : #'bufferInit:',			#protocol : #'as yet unclassified',			#sourceCode : 'bufferInit: inp_array\r\tarr := inp_array.',			#stamp : 'MagdalenaDhima 1/26/2021 12:32',			#package : #CPS506		}	}}OmEntry {	#tags : {		#author : 'AutoDeprecationRefactoring',		#time : DateAndTime [ '2021-01-26T15:00:55.341668-05:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EyeInspector,				#isMetaSide : false			},			#name : #updateList,			#protocol : #event-handling,			#sourceCode : 'updateList\r\t"update the list of elements displayed according to the new object"\r\r\t| elements |\r\t"\tself haltOnce."\r\telements := self generateElements.\r\tself list items = elements\r\t\tifTrue: [ ^ self ].\r\t"first reset the items to make sure we don\'t interfere with the display block"\r\t"self list items: #()."\r\tself list displayBlock: [ :eyeElement | self labelFor: eyeElement ].\r\tself list items: elements.\r\r\t"handle when last item of list is removed"\r\tself list selection selectedIndex > self list items size\r\t\tifTrue: [ self list setSelectedIndex: self list listItems size ].\r\r\t"handle when selected dictionary key is removed"\r\tself list selectIndex: self list selection selectedIndex.\r\tself list menu: [ :aMenu | self inspectionMenu: aMenu ]',			#stamp : '',			#package : #Spec2-Inspector		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #EyeInspector,				#isMetaSide : false			},			#name : #updateList,			#protocol : #event-handling,			#sourceCode : 'updateList\r\t"update the list of elements displayed according to the new object"\r\r\t| elements |\r\t"\tself haltOnce."\r\telements := self generateElements.\r\tself list items = elements\r\t\tifTrue: [ ^ self ].\r\t"first reset the items to make sure we don\'t interfere with the display block"\r\t"self list items: #()."\r\tself list display: [ :eyeElement | self labelFor: eyeElement ].\r\tself list items: elements.\r\r\t"handle when last item of list is removed"\r\tself list selection selectedIndex > self list items size\r\t\tifTrue: [ self list setSelectedIndex: self list listItems size ].\r\r\t"handle when selected dictionary key is removed"\r\tself list selectIndex: self list selection selectedIndex.\r\tself list menu: [ :aMenu | self inspectionMenu: aMenu ]',			#stamp : 'AutoDeprecationRefactoring 1/26/2021 15:00',			#package : #Spec2-Inspector		}	}}OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-01-26T16:01:52.033668-05:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProfStef class',				#isMetaSide : true			},			#name : #goToNextLesson,			#protocol : #navigating,			#sourceCode : 'goToNextLesson\r\r  self next',			#stamp : '',			#package : #ProfStef-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProfStef class',				#isMetaSide : true			},			#name : #goToNextLesson,			#protocol : #'as yet unclassified',			#sourceCode : 'goToNextLesson\r\r  self next',			#stamp : '',			#package : #ProfStef-Core		}	}}OmEntry {	#tags : {		#author : 'MagdalenaDhima',		#time : DateAndTime [ '2021-01-26T16:01:52.036668-05:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ProfStef class',				#isMetaSide : true			},			#name : #goToNextLesson,			#protocol : #navigating,			#sourceCode : 'goToNextLesson\r\r  self next',			#stamp : '',			#package : #ProfStef-Core		}	}}